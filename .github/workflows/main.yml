# This is a basic workflow to help you get started with Actions

name: Push To Yandex Cloud CR

# Controls when the action will run.
on:
  push:
    branches: [ main ]
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains two jobs called "build" and "deploy"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS_NEB }}


      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crl5thijr34k608295b5
          CR_REPOSITORY: yc-coi-github-action
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.il.nebius.cloud/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.il.nebius.cloud/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy-ig@v1
        env:
          IMAGE_URL: cr.il.nebius.cloud/crl5thijr34k608295b5/yc-coi-github-action:${{ github.sha }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS_NEB }}
          folder-id: yc.marketplace.mkt-test-folder
          ig-spec-path: './spec.yaml'
          user-data-path: './user-data.yaml'
          docker-compose-path: './docker-compose.yaml'
          api-endpoint: api.cloudil.com
